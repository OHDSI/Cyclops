# Generated by roxygen2: do not edit by hand

S3method(coef,cyclopsFit)
S3method(confint,cyclopsFit)
S3method(convertToCyclopsData,data.frame)
S3method(convertToCyclopsData,tbl_dbi)
S3method(logLik,cyclopsFit)
S3method(predict,cyclopsFit)
S3method(print,cyclopsData)
S3method(print,cyclopsFit)
S3method(summary,cyclopsData)
S3method(survfit,cyclopsFit)
S3method(vcov,cyclopsFit)
export(Multitype)
export(aconfint)
export(convertToCyclopsData)
export(convertToTimeVaryingCoef)
export(coverage)
export(createAutoGridCrossValidationControl)
export(createControl)
export(createCyclopsData)
export(createNonSeparablePrior)
export(createParameterizedPrior)
export(createPrior)
export(createWeightBasedSearchControl)
export(finalizeSqlCyclopsData)
export(fitCyclopsModel)
export(fitCyclopsSimulation)
export(getCovariateIds)
export(getCovariateTypes)
export(getCyclopsProfileLogLikelihood)
export(getFineGrayWeights)
export(getFloatingPointSize)
export(getHyperParameter)
export(getNumberOfCovariates)
export(getNumberOfRows)
export(getNumberOfStrata)
export(getUnivariableCorrelation)
export(getUnivariableSeparability)
export(isInitialized)
export(listGPUDevices)
export(meanLinearPredictor)
export(mse)
export(readCyclopsData)
export(runBootstrap)
export(setOpenCLDevice)
export(simulateCyclopsData)
export(splitTime)
import(Matrix)
import(Rcpp)
import(dplyr)
importFrom(bit64,as.integer64)
importFrom(bit64,is.integer64)
importFrom(methods,as)
importFrom(rlang,.data)
importFrom(stats,aggregate)
importFrom(stats,approx)
importFrom(stats,as.formula)
importFrom(stats,coef)
importFrom(stats,coefficients)
importFrom(stats,confint)
importFrom(stats,contrasts)
importFrom(stats,deviance)
importFrom(stats,model.matrix)
importFrom(stats,model.offset)
importFrom(stats,model.response)
importFrom(stats,pchisq)
importFrom(stats,poisson)
importFrom(stats,predict)
importFrom(stats,qchisq)
importFrom(stats,qnorm)
importFrom(stats,rbinom)
importFrom(stats,rexp)
importFrom(stats,rnorm)
importFrom(stats,rpois)
importFrom(stats,runif)
importFrom(stats,terms)
importFrom(stats,time)
importFrom(stats,vcov)
importFrom(survival,Surv)
importFrom(survival,survSplit)
importFrom(survival,survfit)
useDynLib(Cyclops, .registration = TRUE)
