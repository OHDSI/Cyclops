/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class dr_inference_regression_RegressionJNIWrapper */

#ifndef _Included_dr_inference_regression_RegressionJNIWrapper
#define _Included_dr_inference_regression_RegressionJNIWrapper
#ifdef __cplusplus
extern "C" {
#endif
#undef dr_inference_regression_RegressionJNIWrapper_NO_PRIOR
#define dr_inference_regression_RegressionJNIWrapper_NO_PRIOR 0L
#undef dr_inference_regression_RegressionJNIWrapper_LAPLACE_PRIOR
#define dr_inference_regression_RegressionJNIWrapper_LAPLACE_PRIOR 1L
#undef dr_inference_regression_RegressionJNIWrapper_NORMAL_PRIOR
#define dr_inference_regression_RegressionJNIWrapper_NORMAL_PRIOR 2L
/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    loadData
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_dr_inference_regression_RegressionJNIWrapper_loadData
  (JNIEnv *, jobject, jstring);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getLogLikelihood
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getLogLikelihood
  (JNIEnv *, jobject, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getLogPrior
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getLogPrior
  (JNIEnv *, jobject, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getBeta
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getBeta
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getBetaSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getBetaSize
  (JNIEnv *, jobject, jint);
  
/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getHessian
 * Signature: (III)D
 */
JNIEXPORT jdouble JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getHessian
  (JNIEnv *, jobject, jint, jint, jint);  

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    setBeta
 * Signature: (IID)V
 */
JNIEXPORT void JNICALL Java_dr_inference_regression_RegressionJNIWrapper_setBeta__IID
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    setBeta
 * Signature: (I[D)V
 */
JNIEXPORT void JNICALL Java_dr_inference_regression_RegressionJNIWrapper_setBeta__I_3D
  (JNIEnv *, jobject, jint, jdoubleArray);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getHyperprior
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getHyperprior
  (JNIEnv *, jobject, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    setHyperprior
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_dr_inference_regression_RegressionJNIWrapper_setHyperprior
  (JNIEnv *, jobject, jint, jdouble);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    findMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_dr_inference_regression_RegressionJNIWrapper_findMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getUpdateCount
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getUpdateCount
  (JNIEnv *, jobject, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    getLikelihoodCount
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_dr_inference_regression_RegressionJNIWrapper_getLikelihoodCount
  (JNIEnv *, jobject, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    setPriorType
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_dr_inference_regression_RegressionJNIWrapper_setPriorType
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     dr_inference_regression_RegressionJNIWrapper
 * Method:    makeDirty
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_dr_inference_regression_RegressionJNIWrapper_makeDirty
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
